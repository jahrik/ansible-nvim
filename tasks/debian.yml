---
- name: Install requirements
  become: true
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
    update_cache: true
    cache_valid_time: 3600
  with_items:
    - curl
    - dirmngr
    - fontconfig
    - git
    - python3-setuptools
    - python3-virtualenv
    - unzip

- name: Install python3-neovim if Ubuntu 18
  become: true
  ansible.builtin.package:
    name: python3-neovim
  when:
    - "ansible_distribution_major_version | int >= 18"
    - "ansible_distribution_major_version | int < 20"

- name: Install python3-pynvim if Ubuntu 20
  become: true
  ansible.builtin.package:
    name: python3-pynvim
  when:
    - "ansible_distribution_major_version | int >= 20"
    - "ansible_distribution_major_version | int < 22"

- name: Add neovim-ppa
  become: true
  ansible.builtin.apt_repository:
    repo: 'ppa:neovim-ppa/unstable'
    update_cache: true

- name: Install the gpg key for nodejs LTS
  become: true
  ansible.builtin.apt_key:
    url: "https://deb.nodesource.com/gpgkey/nodesource.gpg.key"
    state: present

- name: Install the nodejs 17 LTS repos
  become: true
  ansible.builtin.apt_repository:
    repo: "deb https://deb.nodesource.com/node_17.x {{ ansible_distribution_release }} main"
    state: present
    update_cache: true

- name: Install nodejs
  become: true
  ansible.builtin.apt:
    name: nodejs
    state: present

- name: Gather package facts
  become: true
  ansible.builtin.package_facts:
    manager: auto

# Ubuntu 20.04 comes with an old version of neovim
- name: Uninstall old versions of neovim if < 0.6
  become: true
  ansible.builtin.apt:
    name: neovim
    state: absent
  when:
    - "'neovim' in ansible_facts.packages"
    - "ansible_facts.packages.neovim[0].version[:3] | float < 0.6"
